#!/usr/bin/python

import sys
import struct
import os
import mmap
import numpy as np


def unpack(string, file):
    buffer = file.read(struct.calcsize(string))
    return struct.unpack(string, buffer)


path = sys.argv[1]
with open(path, "rb") as inp:
    magic, = unpack('i', inp)
    if magic != 1234:
        sys.stderr.write("dat2slice: error: '%s' not a dat file\n" % path)
        sys.exit(1)
    dim, = unpack('i', inp)
    if dim != 3:
        sys.stderr.write("dat2slice: error: wrong dimension '%d'\n" % dim)
        sys.exit(1)
    nx, ny, nz, type_id = unpack('iiii', inp)
    seek = inp.tell()
    type_name = {0: "<d", 1: "<f", 2: "<i"}[type_id]
with open(path, "rb+") as inp:
    mm = mmap.mmap(inp.fileno(), 0)
    dtype = np.dtype(type_name)
    a = np.ndarray((nx, ny, nz), dtype, mm, seek, order='F')
    print(np.unique(a))
