#!/usr/bin/python

import sys
import struct
import os
import re


def unpack(string, file):
    buffer = file.read(struct.calcsize(string))
    return struct.unpack(string, buffer)


sx, sy, sz = 1, 1, 1
try:
    path = sys.argv[1]
except IndexError:
    sys.stderr.write("dat2xdmf2: error: needs an argument\n")
    sys.exit(1)
for path in sys.argv[1:]:
    try:
        with open(path, "rb") as file:
            magic, = unpack('i', file)
            if magic != 1234:
                sys.stderr.write("dat2xdmf2: error: '%s' not a dat file\n" %
                                 path)
                sys.exit(1)
            dim, = unpack('i', file)
            if dim != 3:
                sys.stderr.write("dat2xdmf2: error: wrong dimension '%d'\n" %
                                 dim)
                sys.exit(1)
            nx, ny, nz, type_id = unpack('iiii', file)
            seek = file.tell()
            size = file.seek(0, os.SEEK_END) - seek
            raw = os.path.basename(path)
            type_name = {0: "Float", 1: "Float", 2: "Int"}[type_id]
            precision = size // nx // ny // nz
            nsx, nsy, nsz = nx // sx, ny // sy, nz // sz
            prefix = re.sub("\.[^\.]*$", "", path)
            xdmf_path = "%s.xdmf2" % prefix
            dx = 1.0 / nx / sx
            dy = 1.0 / ny / sy
            dz = 1.0 / nz / sz
            sdx = 0.5 * dx
            sdy = 0.5 * dy
            sdz = 0.5 * dz
            sys.stderr.write("%s\n" % xdmf_path)
            with open(xdmf_path, "w") as xdmf:
                xdmf.write("""\
<Xdmf>
  <Domain>
    <Grid>
      <Topology
        TopologyType="3DCORECTMesh"
        Dimensions="{nsz} {nsy} {nsx}"/>
      <Geometry
        GeometryType="ORIGIN_DXDYDZ">
        <DataItem
          Name="Origin"
          Dimensions="3">
                 ${sdz} ${sdy} ${sdz}
        </DataItem>
        <DataItem
          Name="Spacing"
          Dimensions="3">
                {dz} {dy} {dx}
        </DataItem>
      </Geometry>
      <Attribute
        Name="u">
        <DataItem
          ItemType="HyperSlab"
          Dimensions="{nsz} {nsy} {nsx}">
          <DataItem Dimensions="3 3">
                    0 0 0
                    {sz} {sy} {sx}
                    {nsz} {nsy} {nsx}
          </DataItem>
          <DataItem
            Dimensions="{nz} {ny} {nx}"
            Format="Binary"
            NumberType="{type_name}"
            Precision="{precision}"
            Seek="{seek}">
                    {raw}
          </DataItem>
        </DataItem>
      </Attribute>
    </Grid>
  </Domain>
</Xdmf>
""".format(**locals()))
    except FileNotFoundError:
        sys.stderr.write("dat2xdmf2: error: fail to open '%s'\n" % path)
        sys.exit(1)
    except struct.error:
        sys.stderr.write("dat2xdmf2: error: fail to read '%s'\n" % path)
        sys.exit(1)
